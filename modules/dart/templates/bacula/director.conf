#
# Bacula Director Configuration
#
# Origin: modules/dart/templates/bacula/bacula-dir.conf
#

# Director console that provides console access with full capabilities.
Director {
    Name = <%= scope.lookupvar('dart::params::bacula_dir_name') %>
    DIRport = 9101
    QueryFile = "/etc/bacula/query.sql"
    WorkingDirectory = "/var/spool/bacula"
    PidDirectory = "/var/run"
    Maximum Concurrent Jobs = 1
    Password = "<%= scope.lookupvar('dart::params::bacula_dir_passwd') %>"
    Messages = Daemon
}


# Restricted console used by tray-monitor to get the status of the director.
Console {
    Name = <%= scope.lookupvar('dart::params::bacula_mon_name') %>
    Password = "<%= scope.lookupvar('dart::params::bacula_mon_passwd') %>"
    CommandACL = status, .status
}

################################################################################
# Schedule Definitions
################################################################################

Schedule {
    Name = "Never"
}

Schedule {
    Name = "FirstWeeklyCycle"
    Run = Full 1st sat at 03:05
    Run = Differential 2nd-5th sat at 03:05
    Run = Incremental mon-fri at 03:05
}

Schedule {
    Name = "SecondWeeklyCycle"
    Run = Differential 1st sat at 03:05
    Run = Full 2nd sat at 03:05
    Run = Differential 3rd-5th sat at 03:05
    Run = Incremental mon-fri at 03:05
}

Schedule {
    Name = "ThirdWeeklyCycle"
    Run = Differential 1st-2nd sat at 03:05
    Run = Full 3rd sat at 03:05
    Run = Differential 4th-5th sat at 03:05
    Run = Incremental mon-fri at 03:05
}

Schedule {
    Name = "FourthWeeklyCycle"
    Run = Differential 1st-3rd sat at 03:05
    Run = Full 4th sat at 03:05
    Run = Differential 5th sat at 03:05
    Run = Incremental mon-fri at 03:05
}

# The WeeklyCycleAfterBackup schedule is used for the BackupCatalog job and
# thus is scheduled to start just after the WeeklyCycle.  Because the director
# only runs one job at a time, it will run once the WeeklyCycle jobs have
# completed.
Schedule {
    Name = "WeeklyCycleAfterBackup"
    Run = Full sun-sat at 23:10
}


################################################################################
# Job Definitions
################################################################################

JobDefs {
    Name = "Default"
    Type = Backup
    Level = Incremental
    FileSet = "default"
    Schedule = "FirstWeeklyCycle"
    Storage = File
    Messages = Standard
    Pool = File
    Priority = 10
    Write Bootstrap = "/var/spool/bacula/%c.bsr"
}

Job {
    Name = "File Server Root"
    Client = mdct-00fs
    JobDefs = "Default"
    Schedule = "SecondWeeklyCycle"
    #  Schedule = "Never"
}

Job {
    Name = "File Server Easily Compressed"
    Client = mdct-00fs
    JobDefs = "Default"
    FileSet = "File Server Easily Compressed"
    Schedule = "ThirdWeeklyCycle"
    #  Schedule = "Never"
}

Job {
    Name = "File Server Storage"
    Client = mdct-00fs
    JobDefs = "Default"
    FileSet = "File Server Storage"
    Schedule = "ThirdWeeklyCycle"
    #  Schedule = "Never"
}

Job {
    Name = "File Server Home"
    Client = mdct-00fs
    JobDefs = "Default"
    FileSet = "File Server Home"
    Schedule = "SecondWeeklyCycle"
    #  Schedule = "Never"
}

Job {
    Name = "File Server Virtual Machines"
    Client = mdct-00fs
    JobDefs = "Default"
    FileSet = "File Server Virtual Machines"
    Schedule = "FourthWeeklyCycle"
    #  Schedule = "Never"
}

Job {
    Name = "File Server Remote Backups"
    Client = mdct-00fs
    JobDefs = "Default"
    FileSet = "File Server Remote Backups"
    Schedule = "FourthWeeklyCycle"
    #  Schedule = "Never"
}

Job {
    Name = "File Server Projects"
    Client = mdct-00fs
    JobDefs = "Default"
    FileSet = "File Server Projects"
    Schedule = "SecondWeeklyCycle"
    #  Schedule = "Never"
}

Job {
    Name = "Bacula Server"
    Client = "<%= scope.lookupvar('dart::params::bacula_dir_name') %>"
    JobDefs = "Default"
}

Job {
     Name = "Florian Workstation"
     Client = mdct-dev12
     JobDefs = "Default"
     FileSet = "mdct-dev12"
}

Job {
    Name = "EST Server"
    Client = mdct-00dw
    JobDefs = "Default"
    FileSet = "mdct-00dw snapshot"
    RunScript {
        Command = "/usr/sbin/backup-snapshot prepare"
        RunsWhen = Before
        RunsOnClient = yes
        FailJobOnError = yes
    }
    RunScript {
        Command = "/usr/sbin/backup-snapshot teardown"
        RunsWhen = After
        RunsOnClient = yes
        # Clean up regardless of the Jobs success/failure.
        RunsOnFailure = yes
        RunsOnSuccess = yes
    }
}

Job {
    Name = "TestLink Server"
    Client = mdct-00tl
    JobDefs = "Default"
    FileSet = "default"
    RunScript {
        Command = "systemctl stop mysqld.service"
        RunsWhen = Before
        RunsOnClient = yes
        FailJobOnError = yes
    }
    RunScript {
        Command = "systemctl start mysqld.service"
        RunsWhen = After
        RunsOnClient = yes
        # Clean up regardless of the Jobs success/failure.
        RunsOnFailure = yes
        RunsOnSuccess = yes
    }
}

Job {
    Name = "Teamcenter Server"
    Client = mdct-tc
    JobDefs = "Default"
    FileSet = "mdct-tc snapshot"
    RunScript {
        Command = "/usr/sbin/backup-snapshot prepare"
        RunsWhen = Before
        RunsOnClient = yes
        FailJobOnError = yes
    }
    RunScript {
        Command = "/usr/sbin/backup-snapshot teardown"
        RunsWhen = After
        RunsOnClient = yes
        # Clean up regardless of the Jobs success/failure.
        RunsOnFailure = yes
        RunsOnSuccess = yes
    }
}

Job {
    Name = "NGIC Server"
    Client = mdct-ngic
    JobDefs = "Default"
    FileSet = "mdct-ngic snapshot"
    RunScript {
        Command = "/usr/sbin/backup-snapshot prepare"
        RunsWhen = Before
        RunsOnClient = yes
        FailJobOnError = yes
    }
    RunScript {
        Command = "/usr/sbin/backup-snapshot teardown"
        RunsWhen = After
        RunsOnClient = yes
        # Clean up regardless of the Jobs success/failure.
        RunsOnFailure = yes
        RunsOnSuccess = yes
    }
}

Job {
    Name = "Design Review Server"
    Client = mdct-dr
    JobDefs = "Default"
    FileSet = "mdct-dr snapshot"
    RunScript {
        Command = "/usr/sbin/backup-snapshot prepare"
        RunsWhen = Before
        RunsOnClient = yes
        FailJobOnError = yes
    }
    RunScript {
        Command = "/usr/sbin/backup-snapshot teardown"
        RunsWhen = After
        RunsOnClient = yes
        # Clean up regardless of the Jobs success/failure.
        RunsOnFailure = yes
        RunsOnSuccess = yes
    }
}

Job {
    Name = "Fogbugz Server"
    Client = fogbugz
    JobDefs = "Default"
}

Job {
    Name = "MDCT-00cc"
    Client = mdct-00cc
    JobDefs = "Default"
}

Job {
    Name = "MDCT-00is Root"
    Client = mdct-00is
    JobDefs = "Default"
}

Job {
    Name = "MDCT-00is Storage"
    Client = mdct-00is
    JobDefs = "Default"
    FileSet = "mdct-00is"
}

Job {
    Name = "mdct-aos-master"
    Client = mdct-aos-master
    JobDefs = "Default"
}

Job {
    Name = "LDAP Server"
    Client = mdct-ldap
    JobDefs = "Default"
}

Job {
    Name = "Nessus Server"
    Client = mdct-nessus
    JobDefs = "Default"
}

Job {
    Name = "Puppet Server"
    Client = mdct-puppet
    JobDefs = "Default"
}

Job {
    Name = "MDCT-pres1"
    Client = mdct-pres1
    JobDefs = "Default"
    FileSet = "mdct-pres1"
}

Job {
    Name = "mdct-nexus"
    Client = mdct-nexus
    JobDefs = "Default"
}

Job {
    Name = "mdct-teamcity"
    Client = mdct-teamcity
    JobDefs = "Default"
}

# Backup the catalog database (after the nightly save)
Job {
    Name = "Backup Catalog"
    JobDefs = "Default"
    Client="<%= scope.lookupvar('dart::params::bacula_dir_name') %>"
    Level = Full
    FileSet = "Catalog"
    Schedule = "WeeklyCycleAfterBackup"
    # This creates an ASCII copy of the catalog
    # Arguments to make_catalog_backup.pl are:
    #  make_catalog_backup.pl <catalog-name>
    RunBeforeJob = "/usr/libexec/bacula/make_catalog_backup.pl MyCatalog"
    # This deletes the copy of the catalog
    RunAfterJob  = "/usr/libexec/bacula/delete_catalog_backup"
    # Maintain a separate, off-host copy of the Bacula conf files in case it is
    # the Bacula server itself that needs to be restored.
    RunAfterJob = "/etc/bacula/backup_conf_files"
    Write Bootstrap = "/var/spool/bacula/%n.bsr"
    Priority = 11                   # run after main backup
}

# Standard Restore template, to be changed by Console program.  Only one such
# job is needed for all Jobs/Clients/Storage ...
Job {
    Name = "Restore Files"
    Type = Restore
    Client = "<%= scope.lookupvar('dart::params::bacula_dir_name') %>"
    FileSet="default"
    Storage = File
    Pool = File
    Messages = Standard
    Where = /tmp/bacula-restores
}


################################################################################
# Client Definitions
################################################################################

Client {
    Name = "<%= scope.lookupvar('dart::params::bacula_dir_name') %>"
    Address = 10.1.250.47
    FDPort = 9102
    Catalog = MyCatalog
    Password = "aaf0b8fd2a1a2200e855cff5735ab066"
    File Retention = 40 days
    Job Retention = 6 months
    AutoPrune = yes
}

Client {
    Name = mdct-00dw
    Address = mdct-00dw.dartcontainer.com
    FDPort = 9102
    Catalog = MyCatalog
    Password = "83a2c60033d6d19a7148517653f32e78"
    File Retention = 40 days
    Job Retention = 6 months
    AutoPrune = yes
}

Client {
    Name = mdct-00tl
    Address = mdct-00tl.dartcontainer.com
    FDPort = 9102
    Catalog = MyCatalog
    Password = "VrLkRkBWWIhDHF8ARkPfGH5mNWnF1wZd939DmfFAhNzS"
    File Retention = 40 days
    Job Retention = 6 months
    AutoPrune = yes
}

Client {
    Name = mdct-tc
    Address = mdct-tc.dartcontainer.com
    FDPort = 9102
    Catalog = MyCatalog
    Password = "uUue45lLldkNNhfla3jf9dkfjxxDkfjAldkfjLKDJE"
    File Retention = 40 days
    Job Retention = 6 months
    AutoPrune = yes
}

Client {
    Name = mdct-ngic
    Address = mdct-ngic.dartcontainer.com
    FDPort = 9102
    Catalog = MyCatalog
    Password = "jJwusfSjdlflSdFe23rtunxNnsnsdeif9939HyL3ds"
    File Retention = 40 days
    Job Retention = 6 months
    AutoPrune = yes
}

Client {
    Name = mdct-dr
    Address = mdct-dr.dartcontainer.com
    FDPort = 9102
    Catalog = MyCatalog
    Password = "pEw3jdJle4QQwkdvSeofk4827DNVldkfjeiRslkDs3"
    File Retention = 40 days
    Job Retention = 6 months
    AutoPrune = yes
}

Client {
    Name = fogbugz
    Address = fogbugz.dartcontainer.com
    FDPort = 9102
    Catalog = MyCatalog
    Password = "0dec843864c41aa0a93e87c44d262e19"
    File Retention = 40 days
    Job Retention = 6 months
    AutoPrune = yes
}

Client {
    Name = mdct-00cc
    Address = mdct-00cc.dartcontainer.com
    FDPort = 9102
    Catalog = MyCatalog
    Password = "d6a936946dd29a7a305da3398ce67d91"
    File Retention = 40 days
    Job Retention = 6 months
    AutoPrune = yes
}

Client {
    Name = mdct-00fs
    Address = mdct-00fs.dartcontainer.com
    FDPort = 9102
    Catalog = MyCatalog
    Password = "853c338e77927a3accc434021d4126b5"
    File Retention = 40 days
    Job Retention = 6 months
    AutoPrune = yes
}

Client {
    Name = mdct-00is
    Address = mdct-00is.dartcontainer.com
    FDPort = 9102
    Catalog = MyCatalog
    Password = "a270fe20fe2aa12afa5478209559e0b1"
    File Retention = 40 days
    Job Retention = 6 months
    AutoPrune = yes
}

Client {
    Name = mdct-aos-master
    Address = mdct-aos-master.dartcontainer.com
    FDPort = 9102
    Catalog = MyCatalog
    Password = "hobe9yveB940mWreqoVzfTMIXfWurWi5ROughoJw7A39"
    File Retention = 40 days
    Job Retention = 6 months
    AutoPrune = yes
}

Client {
    Name = mdct-ldap
    Address = mdct-ldap.dartcontainer.com
    FDPort = 9102
    Catalog = MyCatalog
    Password = "ea7ac7f62e51788b110d4050dea11fc5"
    File Retention = 40 days
    Job Retention = 6 months
    AutoPrune = yes
}

Client {
    Name = mdct-nessus
    Address = 10.1.192.109
    FDPort = 9102
    Catalog = MyCatalog
    Password = "5d1b8365668081413d8c6ca1fbbfe4a3"
    File Retention = 40 days
    Job Retention = 6 months
    AutoPrune = yes
}

Client {
    Name = mdct-pres1
    Address = mdct-pres1.dartcontainer.com
    FDPort = 9102
    Catalog = MyCatalog
    Password = "0a6ee7fd6eb11db5e1f35392af2dcf15"
    File Retention = 40 days
    Job Retention = 6 months
    AutoPrune = yes
}

Client {
    Name = mdct-puppet
    Address = puppet.dartcontainer.com
    FDPort = 9102
    Catalog = MyCatalog
    Password = "d730e38202fb2f6b8f8fb35045538a9f"
    File Retention = 40 days
    Job Retention = 6 months
    AutoPrune = yes
}

Client {
    Name = mdct-dev12
    Address = mdct-dev12.dartcontainer.com
    FDPort = 9102
    Catalog = MyCatalog
    Password = "204f4392ecdcfd3324ce6efb2cb142f4"
    File Retention = 40 days
    Job Retention = 6 months
    AutoPrune = yes
}

Client {
    Name = mdct-nexus
    Address = 10.1.192.190
    FDPort = 9102
    Catalog = MyCatalog
    Password = "v1OUZExhC5RwX6VtphBlrD61PI1XrlwVZH7yMFCVy1Yj"
    File Retention = 40 days
    Job Retention = 6 months
    AutoPrune = yes
}

Client {
    Name = mdct-teamcity
    Address = teamcity.dartcontainer.com
    FDPort = 9102
    Catalog = MyCatalog
    Password = "RFdZ9Dm9bxuIEIp1Q7Gu0sEoHX9AUHecFbwE6weT1IAz"
    File Retention = 40 days
    Job Retention = 6 months
    AutoPrune = yes
}

################################################################################
# File Set Definitions
################################################################################

FileSet {
    Name = "default"
    Include {
        Options { signature = MD5 }
        File = /
    }
    Exclude {
        File = /.fsck
        File = /.journal
        File = /proc
        File = /sys
        File = /tmp
        File = /var/cache/yum
        File = /var/ftp/pub/fedora
        File = /var/spool/bacula
    }
}

FileSet {
    Name = "File Server Easily Compressed"
    Include {
      Options {
        signature = MD5
        compression = GZIP1
      }
    File = /storage/hbhist
    File = /storage/pentane
    }
}

FileSet {
    Name = "File Server Storage"
    Include {
      Options {
        signature = MD5
      }
      File = /storage/
    }
    Exclude {
      File = /storage/home
      File = /storage/virtual-machines
      File = /storage/remote-backups
      File = /storage/hbhist
      File = /storage/pentane
      File = /storage/pub
      File = /storage/mk-vms
      File = /storage/projects
    }
}

FileSet {
    Name = "File Server Home"
    Include {
      Options {
        signature = MD5
      }
      File = /storage/home
    }
}

FileSet {
    Name = "File Server Virtual Machines"
    Include {
      Options {
        signature = MD5
      }
      File = /storage/virtual-machines
    }
}

FileSet {
    Name = "File Server Remote Backups"
    Include {
      Options {
        signature = MD5
      }
      File = /storage/remote-backups
    }
}

FileSet {
    Name = "File Server Projects"
    Include {
      Options {
        signature = MD5
      }
      File = /storage/projects
    }
}

FileSet {
    Name = "Normal Storage for mdct-00fs"
    Include {
      Options { signature = MD5  }
      File = /storage
    }
    Exclude {
      File = /storage/pub
      File = /storage/virtual-machines
      File = /storage/hbhist
      File = /storage/pentane
    }
}

FileSet {
    Name = "Easily Compressed Storage for mdct-00fs"
    Include {
      Options {
        signature = MD5
        compression = GZIP1
      }
      File = /storage/hbhist
      File = /storage/pentane
    }
}

FileSet {
    Name = "mdct-dev12"
    Include {
        Options { signature = MD5 }
        File = /
        File = /mnt-local/storage
        File = /opt
    }
    Exclude {
        File = /mnt-local/storage/Pound

        File = /.fsck
        File = /.journal
        File = /proc
        File = /sys
        File = /tmp
        File = /var/cache/yum
        File = /var/ftp/pub/fedora
        File = /var/spool/bacula
    }
}

FileSet {
    Name = "mdct-pres1"
    Include {
        Options { signature = MD5 }
        File = /
        File = /storage
    }
    Exclude {
        File = /.fsck
        File = /.journal
        File = /proc
        File = /sys
        File = /tmp
        File = /var/cache/yum
        File = /var/ftp/pub/fedora
        File = /var/spool/bacula
    }
}

FileSet {
    Name = "mdct-00is"
    Include {
      Options { signature = MD5 }
      File = /storage
    }
}


FileSet {
    Name = "picaps"
    Include {
      Options { signature = MD5 }
      File = /dist/backup
    }
}

FileSet {
    Name = "mdct-00dw snapshot"
    Include {
        Options {
            OneFS = no  # req. to reach multiple LVM snapshot volumes
            signature = MD5
        }
        File = /var/spool/backup_snapshots
    }
}

FileSet {
    Name = "mdct-tc snapshot"
    Include {
        Options {
            OneFS = no  # req. to reach multiple LVM snapshot volumes
            signature = MD5
        }
        File = /var/spool/backup_snapshots
    }
}

FileSet {
    Name = "mdct-ngic snapshot"
    Include {
        Options {
            OneFS = no  # req. to reach multiple LVM snapshot volumes
            signature = MD5
        }
        File = /var/spool/backup_snapshots
    }
}

FileSet {
    Name = "mdct-dr snapshot"
    Include {
        Options {
            OneFS = no  # req. to reach multiple LVM snapshot volumes
            signature = MD5
        }
        File = /var/spool/backup_snapshots
    }
}

# This is the backup of the catalog
FileSet {
    Name = "Catalog"
    Include {
      Options {
        signature = MD5
      }
      File = "/var/spool/bacula/bacula.sql"
    }
}


################################################################################
# Storage Definitions
################################################################################

# Definition of file storage device
Storage {
    Name = File
    Address = <%= scope.lookupvar('dart::params::bacula_sd_fqdn') %>
    SDPort = 9103
    Password = "<%= scope.lookupvar('dart::params::bacula_sd_passwd') %>"
    Device = FileStorage
    Media Type = File
}

# Generic catalog service
Catalog {
    Name = MyCatalog
    dbname = "bacula"; dbuser = "bacula"; dbpassword = "dd247026629bf00bd64bdeaff45e89bd"
}


################################################################################
# Messaging Configuration
################################################################################

# Send most everything to email address and to the console.
Messages {
    Name = Standard
#
# NOTE! If you send to two email or more email addresses, you will need
#  to replace the %r in the from field (-f part) with a single valid
#  email address in both the mailcommand and the operatorcommand.
#  What this does is, it sets the email address that emails would display
#  in the FROM field, which is by default the same email as they're being
#  sent to.  However, if you send email to more than one address, then
#  you'll have to set the FROM address manually, to a single address. 
#  for example, a 'no-reply@mydomain.com', is better since that tends to
#  tell (most) people that its coming from an automated source.

    # NB: Note that when % follows <, you must double the % due to puppet's
    #     ERB templating.
    #
    mailcommand = "/usr/sbin/bsmtp -h smtp.dartcontainer.com -f \"mdct_bacula_director@dart.biz\" -s \"Bacula: %l %t %e on %c\" %r"
    operatorcommand = "/usr/sbin/bsmtp -h localhost -f \"mdct_bacula_director@dart.biz\" -s \"Bacula: Intervention needed for %j\" %r"
    # TODO
    # mail = nathan.nephew@dart.biz,ben.minshall@dart.biz,john.florian@dart.biz,chris.pugh@dart.biz,levi.harper@dart.biz,kristina.doyle@dart.biz,elizabeth.scott@dart.biz = all, !skipped
    mail = john.florian@dart.biz = all, !skipped
    # operator = nathan.nephew@dart.biz,ben.minshall@dart.biz,john.florian@dart.biz,chris.pugh@dart.biz,levi.harper@dart.biz = mount
    operator = john.florian@dart.biz = mount
    console = all, !skipped, !saved
#
# WARNING! the following will create a file that you must cycle from
#          time to time as it will grow indefinitely. However, it will
#          also keep all your messages if they scroll off the console.
#
    append = "/var/log/bacula/bacula.log" = all, !skipped
    catalog = all
}

# Message delivery for daemon messages (no job).
Messages {
    Name = Daemon
    # NB: Note that when % follows <, you must double the % due to puppet's
    #     ERB templating.
    mailcommand = "/usr/sbin/bsmtp -h smtp.dartcontainer.com -f \"mdct_bacula_director@dart.biz\" -s \"Bacula: %l %t %e on %c\" %r"
    # TODO
    # mail = nathan.nephew@dart.biz,ben.minshall@dart.biz,john.florian@dart.biz,chris.pugh@dart.biz,levi.harper@dart.biz,kristina.doyle@dart.biz,elizabeth.scott@dart.biz = all, !skipped
    mail = john.florian@dart.biz = all, !skipped
    console = all, !skipped, !saved
    append = "/var/log/bacula/bacula.log" = all, !skipped
}


################################################################################
# Pool Definitions
################################################################################

# File Pool definition
Pool {
    Name = File
    Pool Type = Backup
    Recycle = yes               # Bacula can automatically recycle Volumes
    AutoPrune = yes             # Prune expired volumes
    # Volumes must be retained at least twice the interval for full backups!
    #
    # WARNING: If the Volume Retention period is to be changed, you should
    # first review the documentation.  Bacula will honor the value stored in
    # each volume and in the Catalog Database Media record in favor over the
    # value given here.  Thus if a change is desired, you will almost
    # certainly also need to update the existing volumes and the Catalog
    # Database Media record.
    Volume Retention = 30 days  # Just over four weeks
    Maximum Volume Bytes = 5G   # Limit Volume size to something reasonable
    Maximum Volumes = 2000      # Limit number of Volumes in Pool
    Label Format = backupVolume
    Volume Use Duration = 30d;
    Recycle Oldest Volume = yes
}
