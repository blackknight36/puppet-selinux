#
# Bacula Director Configuration
#
# Origin: modules/dart/templates/bacula/bacula-dir.conf
#

# Director console that provides console access with full capabilities.
Director {
    Name = <%= scope.lookupvar('dart::params::bacula_dir_name') %>
    DIRport = 9101
    QueryFile = "/etc/bacula/query.sql"
    WorkingDirectory = "/var/spool/bacula"
    PidDirectory = "/var/run"
    Maximum Concurrent Jobs = 1
    Password = "<%= scope.lookupvar('dart::params::bacula_dir_passwd') %>"
    Messages = DirectorMessages
}


# Restricted console used by tray-monitor to get the status of the director.
Console {
    Name = <%= scope.lookupvar('dart::params::bacula_mon_name') %>
    Password = "<%= scope.lookupvar('dart::params::bacula_mon_passwd') %>"
    CommandACL = status, .status
}

@/etc/bacula/director/schedules.conf
@/etc/bacula/director/jobs.conf
@/etc/bacula/director/clients.conf
@/etc/bacula/director/file-sets.conf

Storage {
    Name = File
    Address = <%= scope.lookupvar('dart::params::bacula_sd_fqdn') %>
    SDPort = 9103
    Password = "<%= scope.lookupvar('dart::params::bacula_sd_passwd') %>"
    Device = FileStorage
    Media Type = File
}

Catalog {
    Name = MyCatalog
    dbname = "bacula"; dbuser = "bacula"; dbpassword = "dd247026629bf00bd64bdeaff45e89bd"
}

# == Messaging Configuration ==
#
# NB: Note that when % follows <, you must double the % due to puppet's ERB
#     templating.
#

# Message delivery for messages that are job-specific.
Messages {
    Name = JobRelated
    MailCommand     = "/usr/sbin/bsmtp -h <%= scope.lookupvar('dart::params::smtp_server') %> -f \"mdct_bacula_director@dart.biz\" -s \"Bacula: %l %t %e on %c\" %r"
    OperatorCommand = "/usr/sbin/bsmtp -h <%= scope.lookupvar('dart::params::smtp_server') %> -f \"mdct_bacula_director@dart.biz\" -s \"Bacula: Intervention needed for %j\" %r"
    mail = <%= scope.lookupvar('dart::params::bacula_team') %> = all, !skipped
    operator = <%= scope.lookupvar('dart::params::bacula_team') %> = mount
    console = all, !skipped, !saved
    append = "/var/log/bacula/bacula.log" = all, !skipped
    catalog = all
}

# Message delivery for director daemon messages.  These are not related to any
# specific job.
Messages {
    Name = DirectorMessages
    MailCommand = "/usr/sbin/bsmtp -h <%= scope.lookupvar('dart::params::smtp_server') %> -f \"mdct_bacula_director@dart.biz\" -s \"Bacula: Director message\" %r"
    mail = <%= scope.lookupvar('dart::params::bacula_team') %> = all, !skipped
    console = all, !skipped, !saved
    append = "/var/log/bacula/bacula.log" = all, !skipped
}

Pool {
    Name = File
    Pool Type = Backup
    Recycle = yes               # Bacula can automatically recycle Volumes
    AutoPrune = yes             # Prune expired volumes
    # Volumes must be retained at least twice the interval for full backups!
    #
    # WARNING: If the Volume Retention period is to be changed, you should
    # first review the documentation.  Bacula will honor the value stored in
    # each volume and in the Catalog Database Media record in favor over the
    # value given here.  Thus if a change is desired, you will almost
    # certainly also need to update the existing volumes and the Catalog
    # Database Media record.
    Volume Retention = 40 days
    Job Retention = 1 year
    Maximum Volume Bytes = 5G   # Limit Volume size to something reasonable
    Maximum Volumes = 2100      # Limit number of Volumes in Pool
    Label Format = backupVolume
    Volume Use Duration = 30d;
    Recycle Oldest Volume = yes
}

# vim: foldmethod=indent
