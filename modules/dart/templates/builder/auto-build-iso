#!/bin/sh
#
# Author: John Florian <john_florian@dart.biz>
# Copyright 2015 Dart Container Corp.


SELF="$(basename $0)"

ARCHIVES='<%= archives %>'
KEEP_DAYS='<%= keep_days %>'
NAME='<%= aos_build_name %>'
TARGET='<%= target %>'
LATEST='latest'
README='README'


source '/usr/libexec/builder/_shared_functions'


purge_expired_images () {
    cd "$ARCHIVES" || fail "Couldn't enter ARCHIVES directory '$ARCHIVES'."
    inform "Purging images more than $KEEP_DAYS days old from '$ARCHIVES' ..."
    find -type f -name 'mdct-aos-flash-*.iso' -mtime +$KEEP_DAYS \
            -print -delete
    inform "Purging emtpy directories from '$ARCHIVES' ..."
    rmdir *-*-*@*:* 2> /dev/null
}

build_for_arch() {
    local arch="$1"
    inform "Starting build-iso to create a new image for ${arch} ..."
    set -x
    build-iso \
            --color never \
            --no-checksum \
            --no-reboot-on-panic \
            --enable-dart-testing-repo \
            $NAME $TARGET $arch
    set +x
}

make_new_images() {
    cd "$ARCHIVES" || fail "Couldn't enter ARCHIVES directory '$ARCHIVES'."
    # Not using build-iso's --in-timestamped-dir option because we want the
    # images for all architectures to land in the same directory.
    local dir="$(date +%Y-%m-%d@%H:%M)"
    mkdir "$dir" || fail "Couldn't make dated directory '$dir'."
    cd "$dir"
    echo "These images are being built right now.  Please wait!" > "$README"
    for arch in i386 x86_64
    do
        build_for_arch $arch
    done
    rm "$README"
    cd ..
    [ -L "$LATEST" ] && rm "$LATEST"
    ln -s "$dir" "$LATEST"
}

main() {
    purge_expired_images
    make_new_images
}


main "$@"
exit 0
