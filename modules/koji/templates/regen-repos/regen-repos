#!/bin/sh
#
# This file is managed by Puppet via the "<%= @module_name %>" module.

# Constants defined in part or wholly by Puppet resources:
CONF='<%= @regen_repos_conf %>'
EXT_REPO_ROOT='<%= @ext_repo_root %>'
STATE_DIR='<%= @regen_repos_states %>'

# Other constants which may be derived from those from Puppet:
SELF=$(basename $0)
DELIM=' '

source '<%= @helpers_bin %>'

checksum_of() {
    # Return a message digest checksum for a recursive "view" of some target
    # directory structure such that iff the contents change in any way, so
    # does the returned checksum.
    local target="${EXT_REPO_ROOT}/$1"
    [ -d $target ] \
        || fail "cannot checksum non-existent directory '${target}'."
    find -L "$target" -ls | md5sum | cut -f1 -d' '
}

load_state() {
    # Return the checksum for the specified tag and directory name which was
    # previously saved with save_state().
    local tag="$1"
    local dir="$2"
    local state="${STATE_DIR}/${tag}"
    [ -e $state ] && grep "||${dir}||" $state | cut -f2 -d"$DELIM"
}

save_state() {
    # Store the given checksum persistently for the specified tag and
    # directory name to be retrieved later by load_state().
    local tag="$1"
    local dir="$2"
    local sum="$3"
    local tmp=$(mktemp -t "${SELF}-XXXX")
    local state="${STATE_DIR}/${tag}"
    [ -e $state ] && grep -v "||${dir}||" $state > $tmp
    printf "||%s||${DELIM}%s\n" $dir $sum >> $tmp
    mv $tmp $state
}

regen_all_repositories() {
    # Iterate over each listed buildroot dependency configuration and
    # regenerate the Koji repositories for them.
    local dependency ext_repo
    info 'Started regeneration of all repositories with mutated external dependencies.'
    config_lines $CONF | while IFS=: read -a dependency
    do
        local tag=${dependency[0]}
        local triggers=0
        info "Checking dependencies for '${tag}'."
        for ext_repo in ${dependency[@]:1}
        do
            local new_chksum=$(checksum_of "$ext_repo")
            local old_chksum=$(load_state "$tag" "$ext_repo")
            info "'${ext_repo}' checksum '${old_chksum}' => '${new_chksum}'"
            if [[ $old_chksum != $new_chksum ]]
            then
                let triggers+=1
                info "'${tag}' has changed dependency '${ext_repo}'."
                save_state "$tag" "$ext_repo" $new_chksum
            fi
        done
        if [ $triggers -gt 0 ]
        then
            info "Regenerating '${tag}' due to ${triggers} triggers."
            koji regen-repo --nowait "$tag"
        fi
    done
    info 'Finished regeneration of all repositories with mutated external dependencies.'
}

main() {
    regen_all_repositories
}

main "$@"
